bcrypt = require('bcrypt')

module.exports = (sequelize, DataTypes) ->
  sequelize.define 'User', {
    email:
      type: DataTypes.STRING
      unique: true
      isEmail: true
      len: [
        6
        75
      ]
    hash: DataTypes.STRING
    salt: DataTypes.STRING
  },
    instanceMethods:
      setPassword: (password, callback) ->
        that = this
        bcrypt.genSalt 10, (err, salt) ->
          if err
            return callback(err, null)
          bcrypt.hash password, salt, (err, hash) ->
            if err
              #console.log('### ERROR SETTTG PASS IN USERMODEL');
              return callback(err, null)
            that.hash = hash
            that.salt = salt
            callback null, that
            #success
          return
        return
      verifyPassword: (password, callback) ->
        bcrypt.compare password, @hash, callback
        return
    classMethods:
      authenticate: (email, password, callback) ->
        @find(where: email: email).success((user) ->
          # on success no user
          if !user
            #console.log('didnt find user\n');
            return callback(null, false)
          # on success user found
          user.verifyPassword password, (err, passwordCorrect) ->
            if err
              #console.log('error verifying password\n');
              return callback(err, false)
            if !passwordCorrect
              #console.log('password incorrect\n');
              return callback(null, false)
            #console.log('password was cool\n');
            callback null, user
          return
        ).error (error) ->
          # on error
          #console.log('error finding user\n');
          #console.log(error);
          callback error
        return
      authenticateHash: (email, hash, callback) ->
        @find(where: email: email).success((user) ->
          # on success no user
          if !user
            #console.log('didnt find user\n');
            return callback(null, false)
          # on success user found
          if hash == user.hash
            callback null, user
          else
            callback null, false
        ).error (error) ->
          # on error
          #console.log('error finding user\n');
          #console.log(error);
          callback error
        return

# ---
# generated by js2coffee 2.0.3